let u = import("./utils.gr")
let static = import("./static.gr")

fn get_routes() {
    # Store routes here
    let routes = {}

    # Add static folders
    let statics = static.build("/assets", "./assets")
    for url, content in statics {
        routes[url] = {
            "class": "static",
            "content": content,
        }
    }


    # Store post dicts here, in the form {"post_ojb":..., "url": ...}
    let posts = []

    # List of directories for posts
    let postList = io.listDir("src/pages/posts")

    # Compute urls and get objects for posts
    u.each(u.map(postList, fn (p) {
        let name = p["name"]
        return {
            "url": "/" + name[0:4] + "/" + name[5:7] + "/" + name[8:10] + "/" + name[11:name.length-3] + ".html",
            "date": p["name"][:10],
            "post_obj": import("pages/posts/" + name).post,
        }
    }), fn (r) {
        let p = r["post_obj"]
        routes[r["url"]] = {
            "class": "html",
            "content": p.content,
            "metadata": {
                "date": r["date"],
                "excerpt": p.excerpt,
                "title": p.title,
                "author": p.author,
                "tags": p.tags,
                "content_type": "article",
            }
        }
        posts = posts + [r]
    })

    # Build index using posts dicts
    routes["/"] = {
        "class": "html",
        "content": import("pages/index.gr").build_index(posts),
        "metadata": {
            "excerpt": "Blog",
            "title": "Blog | mliezun.github.io",
            "author": "Miguel Liezun",
            "tags": "software,tech,fun",
            "date": "",
            "excerpt": "Blog",
        }
    }
    
    return routes
}
