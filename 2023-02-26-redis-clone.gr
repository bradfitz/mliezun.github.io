let base = import("../base.gr")


let firstParagraph = "In this post we're going to write a basic Redis clone in Go that implements the most simple commands: GET, 
SET, DEL and QUIT. At the end you'll know how to parse a byte stream from a live TCP connection, and hopefully have a working
implementation of Redis."

fn optionFormat(op, time, desc) {
	return "<span class=\"single-quote\">" + op + "</span>" + " <em>" + time + "</em> -- " + desc
}

# Create new Post Object
let post = base.Post(
    "Writing a Redis clone in Go from scratch",
    firstParagraph,
    "Miguel Liezun",
    "programming,go,redis,diy,golang",
    [
		["h2", [], "Writing a Redis clone in Go from scratch"],
		["p", [], firstParagraph],
		["p", [], "What's intersting about this project is that it's <em>production ready</em> (not really).
		It's being used in production in an old Web app that I made for a client in 2017. 
		<strong>It has been running for over a month without issues</strong>."],
		["p", [], "I mantain that app to this day and I charge like 50 bucks a month for it. I do it because
		Im friends with the person that uses the app."],
		["p", [], "Long story short, the app's backend is written in PHP and uses Redis for caching, only GET, SET and DEL commands. 
		I asked my friend if I could replace it with my custom version and said yes, so I decided to give it a go."],

		
		["h3", [], "What we'll be building"],
		["p", [], [
			"If you go to the ",
			["a", ["href", "https://redis.io/commands/"], "command list"],
			" on redis webpage you'll see that there are 463 commands to this day (maybe more if you're in the future).",
		]],
		["p", [], [
			"That's a crazy number. We're only implementing 4 commands: <span class=\"single-quote language-undefined\">GET, SET, DEL, QUIT</span>,",
			" <em>the other 459 commands are left as an exercise to the reader</em>.",
		]],
		["h4", [], "GET"],
		["p", [], [
			["pre", ["class", "triple-quote redis language-css"], [
				"GET key"
			]],
		]],
		["h4", [], "SET"],
		["p", [], [
			"SET command gains more features on newer versions of Redis. We're going to implement one that has all features",
			" that were realeased up until version 6.0.0.",
		]],
		["p", [], [
			["pre", ["class", "triple-quote redis"], [
				"SET key value [NX | XX] [EX seconds | PX milliseconds]"
			]],
		]],
		["h5", [], "Options"],
		["p", [], [
			["ul", [], [
				["li", [], optionFormat("EX", "seconds", "Set the specified expire time, in seconds.")],
				["li", [], optionFormat("PX", "milliseconds", "Set the specified expire time, in seconds.")],
				["li", [], optionFormat("NX", "", "Only set the key if it does not already exist.")],
				["li", [], optionFormat("XX", "", "Only set the key if it already exist.")],
			]]
		]]
	]
)
